/**
     * 前序：中-左-右
     *
     * 中序：左-中-右
     *
     * 后序：左-右-中
     */
    //前序遍历
    /**
     * 递归实现前序（中左右）
     * @param root
     */
    private void prevOrderDG(Node root) {
        if(root ==null){
            return ;
        }
        System.out.print(root.data +" ");
        prevOrderDG(root.left);
        prevOrderDG(root.right);
    }
    
    //中序遍历
     /**
     * 使用递归实现中序遍历（左中右）
     * @param root
     */
    private void midOrderDG(Node root) {
        //递归到底
        if(root==null){
            return ;
        }
        midOrderDG(root.left);
        System.out.print(root.data +" ");
        midOrderDG(root.right);
    }
   
    //后序遍历
  /**
     * 二叉树的后序遍历
     */
    public void backOrder(){
        backOrderDG(root);
    }

    private void backOrderDG(Node root) {
        if(root ==null){
            return;
        }
        backOrderDG(root.left);
        backOrderDG(root.right);
        System.out.print(root.data+" ");
    }

     
    
